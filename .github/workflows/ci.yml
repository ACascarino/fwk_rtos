# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/
#
# This workflow uses actions that are not certified by GitHub. They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.
#
# This file contains the workflows that are run prior to merging a pull request.

name: Build

on:
  push:
    branches:
      - 'develop'
  pull_request:
    branches:
      - 'develop'

  # Allow manually triggering of the workflow.
  workflow_dispatch: {}

env:
  XCORE_SDK_PATH: ${{ github.workspace }}
  SDK_APP_BUILDER: 'ghcr.io/xmos/sdk_app_builder:develop'
  SDK_DOC_BUILDER: 'ghcr.io/xmos/sdk_doc_builder:develop'

jobs:
  verify_python_package_install:
    name: Install & verify Python packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' 

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/install/requirements.txt

      - name: Verify install
        run: |
          python test/verify_python_install.py

  build_metal_examples:
    name: Build bare-metal examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Pull SDK_APP_BUILDER container
        run: |
          docker pull ${SDK_APP_BUILDER} 
      
      - name: Build
        run: |
          docker run --user $(id -u) --rm -w /xcore_sdk -e XCORE_SDK_PATH=/xcore_sdk -v ${XCORE_SDK_PATH}:/xcore_sdk ${SDK_APP_BUILDER} bash -l tools/ci/build_metal_examples.sh all

  build_rtos_examples:
    name: Build RTOS examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Pull SDK_APP_BUILDER container
        run: |
          docker pull ${SDK_APP_BUILDER} 
      
      - name: Build
        run: |
          docker run --user $(id -u) --rm -w /xcore_sdk -e XCORE_SDK_PATH=/xcore_sdk -v ${XCORE_SDK_PATH}:/xcore_sdk ${SDK_APP_BUILDER} bash -l tools/ci/build_rtos_examples.sh smoke

  build_rtos_usb_examples:
    name: Build RTOS USB examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Pull SDK_APP_BUILDER container
        run: |
          docker pull ${SDK_APP_BUILDER} 
      
      - name: Build
        run: |
          docker run --user $(id -u) --rm -w /xcore_sdk -e XCORE_SDK_PATH=/xcore_sdk -v ${XCORE_SDK_PATH}:/xcore_sdk ${SDK_APP_BUILDER} bash -l tools/ci/build_rtos_usb_examples.sh smoke

  build_rtos_tests:
    name: Build RTOS tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Pull SDK_APP_BUILDER container
        run: |
          docker pull ${SDK_APP_BUILDER} 
      
      - name: Build
        run: |
          docker run --user $(id -u) --rm -w /xcore_sdk -e XCORE_SDK_PATH=/xcore_sdk -v ${XCORE_SDK_PATH}:/xcore_sdk ${SDK_APP_BUILDER} bash -l tools/ci/build_rtos_tests.sh all
